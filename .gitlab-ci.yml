image: docker:stable

services:
    - docker:stable-dind

variables:
    REPOSITORY_STAGING: "gitlab-master.nvidia.com:5005/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}"
    REPOSITORY_PROD: "${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}"
    OS: "${CI_COMMIT_REF_NAME}"

before_script:
    - if [[ -z $NV_CI_INTERNAL ]]; then export REPOSITORY=$REPOSITORY_PROD; else export REPOSITORY=$REPOSITORY_STAGING; fi
    - if [[ -z $NV_CI_INTERNAL ]]; then
          docker login -u "${REGISTRY_USER}" -p "${REGISTRY_TOKEN}";
      else
          docker login -u gitlab-ci-token -p $CI_JOB_TOKEN gitlab-master.nvidia.com:5005;
      fi

stages:
    - cuda
    - cudnn
    - test
    - deploy

.cuda_template: &cuda_definition
    stage: cuda
    tags:
        - cuda-docker
    script:
    - VERSION="${CI_JOB_NAME:1}"
    - docker build --network=host -t "${REPOSITORY}:${VERSION}-runtime-${OS}"
                   --cache-from "${REPOSITORY}:${VERSION}-runtime-${OS}-disable"
                   "${VERSION}/runtime"
    - docker build --network=host -t "${REPOSITORY}:${VERSION}-devel-${OS}"
                   --cache-from "${REPOSITORY}:${VERSION}-devel-${OS}-disable"
                   --build-arg "repository=${REPOSITORY}"
                   "${VERSION}/devel"
    - if [[ "${NO_OS_SUFFIX}" == true ]]; then
          docker tag "${REPOSITORY}:${VERSION}-runtime-${OS}" "${REPOSITORY}:${VERSION}-runtime";
          docker tag "${REPOSITORY}:${VERSION}-devel-${OS}" "${REPOSITORY}:${VERSION}-devel";
      fi
    - if [[ "${LATEST}" == true ]]; then
          docker tag "${REPOSITORY}:${VERSION}-devel-${OS}" "${REPOSITORY}:latest";
      fi

.cuda_base_template: &cuda_base_definition
    stage: cuda
    tags:
        - cuda-docker
    script:
    - VERSION="${CI_JOB_NAME:1}"
    - docker build --network=host -t "${REPOSITORY}:${VERSION}-base-${OS}"
                   --cache-from "${REPOSITORY}:${VERSION}-base-${OS}-disable"
                   "${VERSION}/base"
    - docker build --network=host -t "${REPOSITORY}:${VERSION}-runtime-${OS}"
                   --cache-from "${REPOSITORY}:${VERSION}-runtime-${OS}-disable"
                   --build-arg "repository=${REPOSITORY}"
                   "${VERSION}/runtime"
    - docker build --network=host -t "${REPOSITORY}:${VERSION}-devel-${OS}"
                   --cache-from "${REPOSITORY}:${VERSION}-devel-${OS}-disable"
                   --build-arg "repository=${REPOSITORY}"
                   "${VERSION}/devel"
    - if [[ "${NO_OS_SUFFIX}" == true ]]; then
          docker tag "${REPOSITORY}:${VERSION}-base-${OS}" "${REPOSITORY}:${VERSION}-base";
          docker tag "${REPOSITORY}:${VERSION}-runtime-${OS}" "${REPOSITORY}:${VERSION}-runtime";
          docker tag "${REPOSITORY}:${VERSION}-devel-${OS}" "${REPOSITORY}:${VERSION}-devel";
      fi
    - if [[ "${LATEST}" == true ]]; then
          docker tag "${REPOSITORY}:${VERSION}-devel-${OS}" "${REPOSITORY}:latest";
      fi

.cudnn_template: &cudnn_definition
    stage: cudnn
    script:
    - VERSION="${CI_JOB_NAME:1}"
    - CUDA_VERSION="${VERSION%-*}"
    - CUDNN_VERSION="${VERSION#*-}"
    - docker pull "${REPOSITORY}:${VERSION}-runtime-${OS}" || true
    - docker build --network=host -t "${REPOSITORY}:${VERSION}-runtime-${OS}"
                   --cache-from "${REPOSITORY}:${VERSION}-runtime-${OS}-disable"
                   --build-arg "repository=${REPOSITORY}"
                   "${CUDA_VERSION}/runtime/${CUDNN_VERSION}"
    - docker pull "${REPOSITORY}:${VERSION}-devel-${OS}" || true
    - docker build --network=host -t "${REPOSITORY}:${VERSION}-devel-${OS}"
                   --cache-from "${REPOSITORY}:${VERSION}-devel-${OS}-disable"
                   --build-arg "repository=${REPOSITORY}"
                   "${CUDA_VERSION}/devel/${CUDNN_VERSION}"
    - if [[ "${NO_OS_SUFFIX}" == true ]]; then
          docker tag "${REPOSITORY}:${VERSION}-runtime-${OS}" "${REPOSITORY}:${VERSION}-runtime";
          docker tag "${REPOSITORY}:${VERSION}-devel-${OS}" "${REPOSITORY}:${VERSION}-devel";
      fi

deploy:
  stage: deploy
  tags:
      - cuda-docker
  script:
    - docker push ${REPOSITORY}

v8.0:
    <<: *cuda_definition

v8.0-cudnn5:
    <<: *cudnn_definition

v8.0-cudnn6:
    <<: *cudnn_definition

v8.0-cudnn7:
    <<: *cudnn_definition

v10.0:
    <<: *cuda_base_definition

v10.0-cudnn7:
    <<: *cudnn_definition

v10.1:
    <<: *cuda_base_definition

v10.1-cudnn7:
    <<: *cudnn_definition
